<section id="programmaticcontrols">    <title>Programmatic Controls for NXT</title>    <para>This section describes how to control certain behaviours of    NXT from the command line.</para><para></para><para>These switches can be set using Java properties. Environmentvariables with the same names and values are also read, thoughproperties will override environment variables. Example:<programlisting><![CDATA[java -DNXT_DEBUG=0 -DNXT_QUERY_REWRITE=true CountQueryResults -c mymeta.xml      -o IS1003d -q '($s summ)($w w):text($w)="project" && $s^$w'    ]]></programlisting>This runs the <function>CountQueryResults</function> program with query rewriting on insilent mode (i.e. no messages). Setting environment variables with thesame names will <emphasis>no longer work</emphasis> .</para><para><variablelist>   <title>Java Arguments Controlling NXT Behaviour</title><varlistentry>   <term><literal>NXT_DEBUG</literal>=<replaceable>number</replaceable></term>   <listitem><para>The expected value is a number between <literal>0</literal> and <literal>4</literal>. <literal>0</literal>:   no messages; <literal>1</literal>: errors only; <literal>2</literal>: important messages; <literal>3</literal>: warnings; 	   <literal>4</literal>: debug information. The arguments <literal>true</literal> and <literal>false</literal> are also   accepted to turn messages on or off.</para></listitem></varlistentry><varlistentry>   <term><literal>NXT_QUERY_REWRITE</literal></term>    <listitem><para>Values accepted: <literal>true</literal> or <literal>false</literal>; defaults to    <literal>false</literal>. If the value is <literal>false</literal>, NXT will automatically rewrite    queries in an attempt to speed up execution.</para></listitem></varlistentry><varlistentry>   <term><literal>NXT_LAZY_LOAD</literal></term>   <listitem><para>Values accepted: <literal>true</literal> or <literal>false</literal>; defaults to   <literal>true</literal>. If the value is <literal>false</literal>, lazy loading will not be used. That   means that data will be loaded en masse rather than as   required. This can cause memory problems when too much data is loaded.</para></listitem></varlistentry><varlistentry>   <term><literal>NXT_RESOURCES_ALWAYS_ASK</literal></term>   <listitem><para>Values accepted: <literal>false</literal> or <literal>false</literal>; defaults to   <literal>false</literal>. If the value is <literal>false</literal>, the user will be asked for input at   all points where there is more than one resource listed in the   resource file for a coding that needs to be loaded. The user will   be asked even if there are already preferred / forced / defaulted   resources for the coding. This should only be used by people who   really understand the use of resources in NXT.</para></listitem></varlistentry><varlistentry>   <term><literal>NXT_RESOURCES</literal></term>   <listitem><para>A list of strings separated by commas (no   spaces). Each string is taken to be the name of a resource in the   resources file for the corpus and is passed to forceResourceLoad so   that it must be loaded. Messages will appear if the resource names   do not appear in the resource file.</para></listitem></varlistentry><varlistentry>   <term><literal>NXT_ANNOTATOR_CODINGS</literal></term>    <listitem><para>A list of strings separated by semi-colons. If any    of the strings are coding names in the metadata file, they are    used when populating the list of existing annotators for the    'choose annotator' dialog. If no valid coding names are listed,    all available annotators are listed.  </para></listitem></varlistentry></variablelist></para></section>