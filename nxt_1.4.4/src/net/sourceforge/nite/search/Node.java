/* Generated By:JJTree: Do not edit this line. Node.java */
package net.sourceforge.nite.search;

/**
 * Generated by the
 * <a href="http://www.webgain.com/products/java_cc/" target="_blank">JavaCC</a>
 * tool JJTree.
 *
 * All AST nodes must implement this interface.  It provides basic
 * machinery for constructing the parent and child relationships
 * between nodes.
 */
public interface Node {

  /**
   * This method is called after the node has been made the current node.
   * It indicates that child nodes can now be added to it.
   */
  public void jjtOpen();

  /**
   * This method is called after all the child nodes have been added.
   */
  public void jjtClose();

  /**
   * This method and {@linkplain #jjtGetParent()} are used to inform the node
   * of its parent.
   * @param n parent
   */
  public void jjtSetParent(Node n);

  /**
   * This method and
   * {@linkplain #jjtSetParent(net.sourceforge.nite.search.Node)} are used to
   * inform the node of its parent.
   * @return parent
   */
  public Node jjtGetParent();

  /**
   * This method tells the node to add its argument to the node's
   * list of children.
   * @param n the child node to be add
   * @param i position to insert
   */
  public void jjtAddChild(Node n, int i);

  /**
   * This method returns a child node.
   * The children are numbered from zero, left to right.
   * @param i number of the child
   * @return the requested child
   */
  public Node jjtGetChild(int i);

  /**
   * Return the number of children the node has.
   * @return the number of children the node has
   */
  public int jjtGetNumChildren();
}
